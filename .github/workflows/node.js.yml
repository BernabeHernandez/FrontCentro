name: CI/CD - Gamificación Ruleta

permissions:
  contents: write
  pages: write

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  # 🧱 Construcción del proyecto
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Obtener repositorio
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Instalar dependencias
        run: npm ci

      - name: Compilar proyecto
        run: npm run build --if-present
        env:
          CI: false

      - name: Subir artefacto de compilación
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build

  #  Pruebas unitarias con Jest
  test-unit:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Obtener repositorio
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Instalar dependencias
        run: npm ci

      - name: Ejecutar pruebas unitarias (Jest)
        run: npm test -- --coverage src/Componentes/Cliente/Gamificacion/GamificacioRoleta.unit.test.jsx || true
        env:
          NODE_ENV: test

      - name: Subir cobertura de pruebas unitarias
        uses: actions/upload-artifact@v4
        with:
          name: jest-unit-coverage
          path: coverage/

  # Pruebas de integración con Jest
  test-integration:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Obtener repositorio
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Instalar dependencias
        run: npm ci

      - name: Ejecutar pruebas de integración (Jest)
        run: npm test -- --coverage src/Componentes/Cliente/Gamificacion/GamificacioRoleta.integration.test.jsx || true
        env:
          NODE_ENV: test

      - name: Subir cobertura de integración
        uses: actions/upload-artifact@v4
        with:
          name: jest-integration-coverage
          path: coverage/

  # Pruebas End-to-End (Cypress)
  test-e2e:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 🔄 Obtener repositorio
        uses: actions/checkout@v4

      - name: ⚙️ Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Instalar dependencias
        run: npm ci

      - name: Instalar Cypress
        run: npm install cypress@15.5.0 --no-save

      - name: Descargar artefacto de compilación
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: build

      - name: Ejecutar pruebas E2E con Cypress
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          start: npm start
          wait-on: 'https://centrorehabilitacion-sepia.vercel.app/cliente/ruleta'
          wait-on-timeout: 300
          spec: cypress/e2e/gamificacion_ruleta.cy.js
          install: false
          headless: true
        env:
          CI: false
          CYPRESS_LOG_LEVEL: debug

      - name: 📸 Subir capturas en caso de fallo
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - name: 📋 Subir registros en caso de fallo
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-logs
          path: cypress/logs

  # Despliegue automático
  deploy:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [test-unit, test-integration, test-e2e]
    steps:
      - name: 🔄 Obtener repositorio
        uses: actions/checkout@v4

      - name: ⚙️ Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: 📦 Instalar dependencias
        run: npm ci

      - name: 🏗️ Compilar proyecto para despliegue
        run: npm run build --if-present
        env:
          CI: false

      - name: Desplegar en GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build
          branch: gh-pages
