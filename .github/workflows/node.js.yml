name: CI/CD - Gamificación Ruleta

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

permissions:
  contents: write

jobs:
  pruebas-unitarias:
    name: Pruebas Unitarias
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - name: Ejecutar pruebas unitarias
        run: npm test -- --testPathPattern="unit.test.jsx"
        env:
          NODE_ENV: test
          CI: true

  pruebas-integracion:
    name: Pruebas de Integración
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - name: Ejecutar pruebas de integración
        run: npm test -- --testPathPattern="integration.test.jsx"
        env:
          NODE_ENV: test
          CI: true

  pruebas-e2e:
    name: Pruebas E2E (Cypress)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - name: Instalar Cypress
        run: npm install cypress@15.5.0 serve --save-dev
      - name: Ejecutar pruebas E2E
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          start: npx serve -s build -l 3000
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 300
          spec: cypress/e2e/gamificacion_ruleta.cy.js
        env:
          CI: true
          CYPRESS_baseUrl: http://localhost:3000
      - name: Subir capturas si falla Cypress
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: cypress/screenshots

  build:
    name: Build de Producción
    runs-on: ubuntu-latest
    needs: [pruebas-unitarias, pruebas-integracion, pruebas-e2e]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - name: Build único para producción
        run: npm run build
        env:
          CI: false
      - name: Guardar build como artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build/

  deploy:
    name: Deploy a Vercel
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Descargar build
        uses: actions/download-artifact@v4
        with:
          name: build
          path: ./build
      - name: Deploy en Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./
